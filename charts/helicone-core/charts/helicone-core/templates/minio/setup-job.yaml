{{- if .Values.helicone.minio.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "minio.name" . }}-setup
  labels:
    {{- include "helicone.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "minio.selectorLabels" . | nindent 8 }}
        job-name: {{ include "minio.name" . }}-setup
    spec:
      restartPolicy: OnFailure
      containers:
        - name: minio-setup
          image: "{{ .Values.helicone.minio.setup.image.repository }}:{{ .Values.helicone.minio.setup.image.tag }}"
          imagePullPolicy: {{ .Values.helicone.minio.setup.image.pullPolicy }}
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: helicone-minio-secrets
                  key: root_user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: helicone-minio-secrets
                  key: root_password
          command:
            - /bin/sh
            - -c
          args:
            - |
              set -e
              echo "Waiting for MinIO to be ready..."
              until mc alias set localminio http://{{ include "minio.name" . }}:{{ .Values.helicone.minio.service.port }} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}; do
                echo "MinIO not ready, waiting..."
                sleep 5
              done
              echo "MinIO is ready. Creating buckets..."
              {{- range .Values.helicone.minio.setup.buckets }}
              mc mb --ignore-existing localminio/{{ . }}
              echo "Created bucket: {{ . }}"
              {{- end }}
              echo "MinIO setup completed successfully!"
{{- end }} 